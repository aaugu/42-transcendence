networks:
    transcendence:
        driver: bridge
        ipam:
            config:
                - subnet: 172.20.0.0/16
                  gateway: 172.20.0.1

volumes:
    # API Gateway
    aetheryte_postgres:
        driver: local
    # Tournament
    tournament_postgres_volume:
        driver: local
    # Live chat
    livechat_postgres_volume:
        driver: local
    #elk volumes
    # elastic_data_volume:
    #     driver: local

services:
    # Aetheryte API Gateway
    # aetheryte-nginx:
    #     extends:
    #         file: aetheryte_api_gateway/docker/docker-compose.yml
    #         service: aetheryte-nginx
    #     depends_on:
    #         aetheryte-python:
    #             condition: service_healthy
    #     ports:
    #         - "10444:443"
    aetheryte-postgres:
        extends:
            file: aetheryte_api_gateway/docker/docker-compose.yml
            service: aetheryte-postgres
    aetheryte-python:
        extends:
            file: aetheryte_api_gateway/docker/docker-compose.yml
            service: aetheryte-python
        depends_on:
            aetheryte-postgres:
                condition: service_healthy

    # Frontend - User interface
    # ui-nginx:
    #     extends:
    #         file: frontend-ui/docker/docker-compose.yml
    #         service: ui-nginx
    #     ports:
    #         - "10443:443"

    # Pong
    pong-python:
        extends:
            file: pong/docker/docker-compose.yml
            service: pong-python
        ports:
            - "9000:9000"

    # Tournament
    tournament-postgres:
        extends:
            file: tournament/docker/docker-compose.yml
            service: tournament-postgres
    tournament-python:
        extends:
            file: tournament/docker/docker-compose.yml
            service: tournament-python
        ports:
            - "10000:10000"
        depends_on:
            aetheryte-postgres:
                condition: service_healthy

    # Live chat
    livechat-postgres:
        extends:
            file: livechat/docker/docker-compose.yml
            service: livechat-postgres
    livechat-python:
        extends:
            file: livechat/docker/docker-compose.yml
            service: livechat-python
        ports:
            - "8000:8000"
        depends_on:
            livechat-postgres:
                condition: service_healthy
    nginx:
        extends:
            file: nginx/docker/docker-compose.yml
            service: nginx
        ports:
            - "10443:443"
    # ssl generation
    # ssl-generation:
    #     extends:
    #         file: sslgen/docker/docker-compose.yml
    #         service: generate_ssl
    # Elasticsearch / Kibana
    # elasticsearch:
    #     extends:
    #         file: elk/docker/docker-compose.yml
    #         service: elasticsearch
    #     ports:
    #         - "9200:9200"
    # init-elasticsearch:
    #     extends:
    #         file: elk/docker/docker-compose.yml
    #         service: init-elasticsearch
    # kibana:
    #     extends:
    #         file: elk/docker/docker-compose.yml
    #         service: kibana
    #     ports:
    #         - "5601:5601"
