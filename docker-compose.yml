networks:
    transcendence:
        driver: bridge
        ipam:
            config:
                - subnet: 172.20.0.0/16
                  gateway: 172.20.0.1

volumes:
    # API Gateway
    aetheryte_postgres:
        driver: local
    # Tournament
    tournament_postgres_volume:
        driver: local
    # Pong
    pong_postgres_volume:
        driver: local
    # Live chat
    livechat_postgres_volume:
        driver: local
    # elk volumes
    elastic_data_volume:
        driver: local

services:
    aetheryte-postgres:
        extends:
            file: aetheryte_api_gateway/docker/docker-compose.yml
            service: aetheryte-postgres
    aetheryte-python:
        extends:
            file: aetheryte_api_gateway/docker/docker-compose.yml
            service: aetheryte-python
        depends_on:
            aetheryte-postgres:
                condition: service_healthy

    # Pong
    pong-python:
        extends:
            file: pong/docker/docker-compose.yml
            service: pong-python

    pong-postgres:
        extends:
            file: pong/docker/docker-compose.yml
            service: pong-postgres

    # Tournament
    tournament-postgres:
        extends:
            file: tournament/docker/docker-compose.yml
            service: tournament-postgres
    tournament-python:
        extends:
            file: tournament/docker/docker-compose.yml
            service: tournament-python
        depends_on:
            aetheryte-postgres:
                condition: service_healthy

    # Live chat
    livechat-postgres:
        extends:
            file: livechat/docker/docker-compose.yml
            service: livechat-postgres
    livechat-python:
        extends:
            file: livechat/docker/docker-compose.yml
            service: livechat-python
        depends_on:
            livechat-postgres:
                condition: service_healthy
    nginx:
        extends:
            file: nginx/docker/docker-compose.yml
            service: nginx
        ports:
            - "443:443"

    # # Elasticsearch / Kibana
    # elasticsearch:
    #     extends:
    #         file: elk/docker/docker-compose.yml
    #         service: elasticsearch
    # init-elasticsearch:
    #     extends:
    #         file: elk/docker/docker-compose.yml
    #         service: init-elasticsearch
    # kibana:
    #     extends:
    #         file: elk/docker/docker-compose.yml
    #         service: kibana
